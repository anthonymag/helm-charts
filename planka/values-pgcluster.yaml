cluster:
  nameOverride: "planka-db"
  namespaceOverride: "planka"

  version:
    postgresql: "14"
  
  cluster:
    instances: 2 
    storage:
      size: 1Gi

    # -- The instances' log level, one of the following values: error, warning, info (default), debug, trace
    logLevel: "info"
  
    # -- When this option is enabled, the operator will use the SuperuserSecret to update the postgres user password.
    # If the secret is not present, the operator will automatically create one.
    # When this option is disabled, the operator will ignore the SuperuserSecret content, delete it when automatically created,
    # and then blank the password of the postgres user by setting it to NULL.
    enableSuperuserAccess: true
    superuserSecret: "replaceme!"
  
    monitoring:
      # -- Whether to enable monitoring
      enabled: true
      podMonitor:
        # -- Whether to enable the PodMonitor
        enabled: true
      prometheusRule:
        # -- Whether to enable the PrometheusRule automated alerts
        enabled: true
  
  backups:
    # -- You need to configure backups manually, so backups are disabled by default.
    enabled: false
  
    # -- Overrides the provider specific default path. Defaults to:
    # S3: s3://<bucket><path>
    # Azure: https://<storageAccount>.<serviceName>.core.windows.net/<containerName><path>
    # Google: gs://<bucket><path>
    destinationPath: ""
    # -- One of `s3`, `azure` or `google`
    provider: s3
    s3:
      region: ""
      bucket: ""
      path: "/"
      accessKey: ""
      secretKey: ""
      # -- Use the role based authentication without providing explicitly the keys
      inheritFromIAMRole: false
    secret:
      # -- Whether to create a secret for the backup credentials
      create: true
      # -- Name of the backup credentials secret
      name: "s3-backup-creds"

    scheduledBackups:
      -
        # -- Scheduled backup name
        name: daily-backup
        # -- Schedule in cron format
        schedule: "0 0 0 * * *"
        # -- Backup owner reference
        backupOwnerReference: self
        # -- Backup method, can be `barmanObjectStore` (default) or `volumeSnapshot`
        method: barmanObjectStore
  
    # -- Retention policy for backups
    retentionPolicy: "10d"
  
